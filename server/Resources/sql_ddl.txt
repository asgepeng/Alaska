CREATE TABLE roles
(
	id INT NOT NULL IDENTITY(1,1),
	[name] VARCHAR(50) NOT NULL CONSTRAINT df_role_name DEFAULT(''),
	[createdBy] INT NOT NULL CONSTRAINT df_role_createdBy DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_role_createdDate DEFAULT(GETDATE()),
	[editedBy] INT NULL,
	[editedDate] DATETIME NULL,
	deleted BIT NOT NULL CONSTRAINT df_role_deleted DEFAULT(0),
	CONSTRAINT pk_roles PRIMARY KEY CLUSTERED (id)
);
CREATE TABLE users
(
	id INT IDENTITY(1,1) NOT NULL,
	[name] VARCHAR(50) NOT NULL CONSTRAINT df_user_name DEFAULT (''),
	[role] INT NOT NULL CONSTRAINT df_user_role DEFAULT(0),
	[login] VARCHAR(50) NOT NULL CONSTRAINT df_user_login DEFAULT (''),
	[password] BINARY(32) NOT NULL CONSTRAINT df_user_password DEFAULT (0x0),
	[createdBy] INT NOT NULL CONSTRAINT df_user_createdBy DEFAULT(0),
	[createdAt] DATETIME NOT NULL CONSTRAINT df_user_createdAt DEFAULT(GETDATE()),
	[editedBy] INT NULL,
	[editedAt] DATETIME NULL,
	[deleted] BIT NOT NULL CONSTRAINT df_user_deleted DEFAULT(0),
	CONSTRAINT pk_users PRIMARY KEY CLUSTERED (id)
);
CREATE TABLE authentications
(
	[token] UNIQUEIDENTIFIER NOT NULL,
	[user] INT NOT NULL CONSTRAINT df_authentication_user DEFAULT(0),
	[expired] DATETIME NOT NULL CONSTRAINT df_authentication_expired DEFAULT(GETDATE()),
	CONSTRAINT pk_authentications PRIMARY KEY ([token])
);
INSERT INTO users ([name], [login], [password], [createdBy], [createdAt])
VALUES ('Administrator', 'admin', HASHBYTES('SHA2_256', CAST('Power123...' AS nvarchar)), 0, GETDATE());
CREATE TABLE waiters
(
	id INT NOT NULL IDENTITY(1,1),
	[name] VARCHAR(100) NOT NULL CONSTRAINT df_waiter_name DEFAULT(''),
	[streetAddress] VARCHAR(250) NOT NULL CONSTRAINT df_waiter_address DEFAULT(''),
	[phone] VARCHAR(50) NOT NULL CONSTRAINT df_waiter_phone DEFAULT(''),
	[email] VARCHAR(80) NOT NULL CONSTRAINT df_waiter_email DEFAULT(''),
	[password] BINARY(32) NOT NULL CONSTRAINT df_waiter_password DEFAULT(0x0),
	[createdBy] INT NOT NULL CONSTRAINT df_waiter_createdBy DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_waiter_createdDate DEFAULT(GETDATE()),
	[editedBy] INT NULL,
	[editedDate] DATETIME NULL,
	[deleted] BIT NOT NULL CONSTRAINT df_waiter_deleted DEFAULT(0),
	CONSTRAINT pk_waiters PRIMARY KEY CLUSTERED (id)
);
CREATE TABLE outlets
(
	id INT NOT NULL IDENTITY(1,1),
	[name] VARCHAR(50) NOT NULL CONSTRAINT df_outlet_name DEFAULT(''),
	[streetAddress] VARCHAR(250) NOT NULL CONSTRAINT df_outlet_streetAddress DEFAULT(''),
	[type] INT NOT NULL CONSTRAINT df_outlet_type DEFAULT(0),
	[waiterId] INT NOT NULL CONSTRAINT df_outlet_waiterId DEFAULT(0),
	[createdBy] INT NOT NULL CONSTRAINT df_outlet_createdBy DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_outlet_createdDate DEFAULT(GETDATE()),
	[editedBy] INT NULL,
	[editedDate] DATETIME NULL,
	[deleted] BIT NOT NULL CONSTRAINT df_outlet_deleted DEFAULT(0),
	CONSTRAINT pk_outlets PRIMARY KEY CLUSTERED (id)
);
CREATE TABLE categories 
(
	id INT NOT NULL IDENTITY(1,1),
	[name] VARCHAR(250) NOT NULL CONSTRAINT df_category_name DEFAULT(''),
	CONSTRAINT pk_categories PRIMARY KEY CLUSTERED ([id])
);
CREATE TABLE products
(
	id INT NOT NULL IDENTITY(1,1),
	[sku] VARCHAR(50) NOT NULL CONSTRAINT df_product_sku DEFAULT(''),
	[name] VARCHAR(150) NOT NULL CONSTRAINT df_product_name DEFAULT(''),
	[description] NVARCHAR(MAX) NOT NULL CONSTRAINT df_product_description DEFAULT(N''),
	[category] INT NOT NULL CONSTRAINT df_product_category DEFAULT(0),
	[stock] INT NOT NULL CONSTRAINT df_product_stock DEFAULT(0),
	[minstock] INT NOT NULL CONSTRAINT df_product_minstock DEFAULT(0),
	[maxstock] INT NOT NULL CONSTRAINT df_product_maxstock DEFAULT(0),
	[unit] VARCHAR(50) NOT NULL CONSTRAINT df_product_unit DEFAULT(''),
	[costAverage] FLOAT NOT NULL CONSTRAINT df_product_costaverage DEFAULT(0.00),
	[price] FLOAT NOT NULL CONSTRAINT df_product_price DEFAULT(0.00),
	[isActive] BIT NOT NULL CONSTRAINT df_product_isactive DEFAULT(0),
	[images] VARCHAR(2048) NOT NULL CONSTRAINT df_product_images DEFAULT(''),
	[createdBy] INT NOT NULL CONSTRAINT df_product_createdBy DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_product_createddate DEFAULT(GETDATE()),
	[editedBy] INT NULL,
	[editedDate] DATETIME NULL,
	[deleted] BIT NOT NULL CONSTRAINT df_product_deleted DEFAULT(0)
	CONSTRAINT pk_products PRIMARY KEY CLUSTERED ([id])
);
CREATE TABLE cashflows
(
	id INT NOT NULL IDENTITY(1,1),
	[date] DATETIME NOT NULL CONSTRAINT df_cashflow_date DEFAULT(GETDATE()),
	[debt] FLOAT NOT NULL CONSTRAINT df_cashflow_debt DEFAULT(0),
	[credit] FLOAT NOT NULL CONSTRAINT df_cashflows_credit DEFAULT(0),
	[notes] VARCHAR(250) NOT NULL CONSTRAINT df_cashflow_notes DEFAULT(''),
	[creator] INT NOT NULL CONSTRAINT df_cashflow_creator DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_cashflow_createdDate DEFAULT(GETDATE()),
	CONSTRAINT pk_cashflows PRIMARY KEY CLUSTERED ([id])
);
CREATE TABLE dailySaleItems
(
	id INT NOT NULL IDENTITY(1,1),
	dailySale INT NOT NULL CONSTRAINT df_dailySaleItem_dailySale DEFAULT(0),
	outlet INT NOT NULL CONSTRAINT df_dailySaleItem_outlet DEFAULT(0),
	waiter INT NOT NULL CONSTRAINT df_dailySaleItem_waiter DEFAULT(0),
	income FLOAT NOT NULL CONSTRAINT df_dailySaleItem_income DEFAULT(0),
	expense FLOAT NOT NULL CONSTRAINT df_dailySaleItem_expense DEFAULT(0),
	notes VARCHAR(250) NOT NULL CONSTRAINT df_dailySaleItem_notes DEFAULT(0),
	CONSTRAINT pk_dailySaleItems PRIMARY KEY CLUSTERED ([id])
);
CREATE TABLE dailySales
(
	id INT NOT NULL IDENTITY(1,1),
	[date] DATE NOT NULL,
	[cashIn] INT NOT NULL CONSTRAINT df_dailySale_cashIn DEFAULT(0),
	[cashOut] INT NOT NULL CONSTRAINT df_dailySale_cashOut DEFAULT(0),
	[notes] VARCHAR(250) NOT NULL CONSTRAINT df_dailySale_notes DEFAULT(''),
	[creator] INT NOT NULL CONSTRAINT df_dailySale_creator DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_dailySale_createdDate DEFAULT(GETDATE()),
	[editor] INT NULL,
	[editedDate] DATETIME NULL,
	CONSTRAINT pk_dailySales PRIMARY KEY CLUSTERED ([id])
);
CREATE TABLE costTypes
(
	id INT NOT NULL IDENTITY(1,1),
	[name] VARCHAR(250) NOT NULL CONSTRAINT df_costType_name DEFAULT(''),
	[type] INT NOT NULL CONSTRAINT df_costType_type DEFAULT(0),
	[creator] INT NOT NULL CONSTRAINT df_costType_creator DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_costType_createdDate DEFAULT(GETDATE()),
	[editor] INT NULL,
	[editedDate] DATETIME NULL,
	[deleted] BIT NOT NULL CONSTRAINT df_costType_deleted DEFAULT(0),
	CONSTRAINT pk_costTypes PRIMARY KEY CLUSTERED (id)
);
CREATE TABLE expenses
(
	id INT NOT NULL IDENTITY(1,1),
	[date] DATETIME NOT NULL CONSTRAINT df_expense_date DEFAULT(GETDATE()),
	[cashoutId] INT NOT NULL CONSTRAINT df_expense_cashoutId DEFAULT(0),
	[notes] VARCHAR(250) NOT NULL CONSTRAINT df_expense_notes DEFAULT(''),
	[creator] INT NOT NULL CONSTRAINT df_expense_creator DEFAULT(0),
	[createdDate] DATETIME NOT NULL CONSTRAINT df_expense_createdDate DEFAULT(GETDATE()),
	CONSTRAINT pk_expenses PRIMARY KEY CLUSTERED (id)
);
CREATE TABLE dailyExpenses
(
	[id] INT NOT NULL IDENTITY(1,1),
	[dailySale] INT NOT NULL CONSTRAINT df_dailyExpense_dailySale DEFAULT(0),
	[costType] INT NOT NULL CONSTRAINT df_dailyExpense_costType DEFAULT(0),
	[costAmount] FLOAT NOT NULL CONSTRAINT df_dailyExpense_costAmount DEFAULT(0),
	CONSTRAINT pk_dailyExpenses PRIMARY KEY CLUSTERED (id)
);